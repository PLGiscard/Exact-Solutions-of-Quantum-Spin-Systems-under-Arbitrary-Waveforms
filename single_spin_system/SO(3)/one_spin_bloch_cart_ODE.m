function [rho,t,elapsedTime] = one_spin_bloch_cart_ODE(para,TMAX,NT,tol,rho0)
%% M. Foroozandeh, P.-L. Giscard, 04/2022
% para: parameters as generated by paragen
% TMAX : maximum evolution time
% NT : number of numerical evalutation points required
% tol: required relative accuracy
% rho0: initial state

tspan = linspace(0,TMAX,NT);

options = odeset('RelTol',tol,'AbsTol',tol);

tic;

g0 = rho0;

[t,Sol]=ode45(@(t,g) myode(t,para,g),tspan,g0,options);

rho(1,:) = Sol(:,1);
rho(2,:) = Sol(:,2);
rho(3,:) = Sol(:,3);

elapsedTime = toc;

end

function dg = myode(t,para,g)

beta = chirp_fun(t,para);

H = [0,           -para.Omega,   2*imag(beta);...
     para.Omega,   0,           -2*real(beta);...
    -2*imag(beta) ,2*real(beta), 0];
    
gvec = [g(1);g(2);g(3)];

dg = H*gvec;

end

function beta=chirp_fun(t,para)

smfactor = para.n;
offs_f = para.deltaf;
bandwidth = para.DeltaF;
phi0 = para.Phi0;
tau_p = para.taup;
omega1 = para.omega1;
offs_t = para.deltat;

Cx = (1/2)*(exp(-(2^(smfactor+2))*((t-offs_t)/tau_p).^smfactor)).*(omega1*cos(phi0+(pi*bandwidth*((t-offs_t).^2)/tau_p)-2*pi*offs_f*(t-offs_t)));
Cy = (1/2)*(exp(-(2^(smfactor+2))*((t-offs_t)/tau_p).^smfactor)).*(omega1*sin(phi0+(pi*bandwidth*((t-offs_t).^2)/tau_p)-2*pi*offs_f*(t-offs_t)));

beta = complex(Cx,Cy);

end
