function [rho,t,elapsedTime] = two_spin_ODE(para,TMAX,NT,tol)
%% M. Foroozandeh, P.-L. Giscard, 04/2022
% para : parameters as generated by paragen
% TMAX : en ms, maximum evolution time
% NT : number of numerical evalutation points per subinterval
% tol: relative and absolute accuracy required of ode45

t_span =  linspace(0,TMAX,NT);

options = odeset('RelTol',tol,'AbsTol',tol);

tic;

sigma_z = 0.5*[1,0;...
               0,-1];

g0 = kron(eye(2),sigma_z) + kron(sigma_z,eye(2));

g0 = g0(:);

[t,Sol] = ode45(@(t,g) myode(t,para,g),t_span,g0,options);

rho(1,1,:) = Sol(:,1);
rho(2,1,:) = Sol(:,2);
rho(3,1,:) = Sol(:,3);
rho(4,1,:) = Sol(:,4);
rho(1,2,:) = Sol(:,5);
rho(2,2,:) = Sol(:,6);
rho(3,2,:) = Sol(:,7);
rho(4,2,:) = Sol(:,8);
rho(1,3,:) = Sol(:,9);
rho(2,3,:) = Sol(:,10);
rho(3,3,:) = Sol(:,11);
rho(4,3,:) = Sol(:,12);
rho(1,4,:) = Sol(:,13);
rho(2,4,:) = Sol(:,14);
rho(3,4,:) = Sol(:,15);
rho(4,4,:) = Sol(:,16);

elapsedTime = toc;

end

function dg = myode(t,para,g)

beta = chirp_fun(t,para);

h11 = (1/2)*( pi*para.J+para.Omega(1)+para.Omega(2));
h22 = (1/2)*(-pi*para.J+para.Omega(1)-para.Omega(2));
h33 = (1/2)*(-pi*para.J-para.Omega(1)+para.Omega(2));
h44 = (1/2)*( pi*para.J-para.Omega(1)-para.Omega(2));

H = [h11,   conj(beta), conj(beta), 0 ;...
     beta,  h22,        pi*para.J,  conj(beta);...
     beta,  pi*para.J,  h33,        conj(beta);...
     0,     beta,       beta,       h44];

H_hat = kron(eye(4),H)-kron(conj(H),eye(4));

gvec = [g(1);  g(2);  g(3);  g(4);...
        g(5);  g(6);  g(7);  g(8);...
        g(9);  g(10); g(11); g(12);...
        g(13); g(14); g(15); g(16)];

dg = -1i*H_hat*gvec;

end

function beta=chirp_fun(t,para)

smfactor = para.n;
offs_f = para.deltaf;
bandwidth = para.DeltaF;
phi0 = para.Phi0;
tau_p = para.taup;
omega1 = para.omega1;
offs_t = para.deltat;

Cx = (1/2)*(exp(-(2^(smfactor+2))*((t-offs_t)/tau_p).^smfactor)).*(omega1*cos(phi0+(pi*bandwidth*((t-offs_t).^2)/tau_p)-2*pi*offs_f*(t-offs_t)));
Cy = (1/2)*(exp(-(2^(smfactor+2))*((t-offs_t)/tau_p).^smfactor)).*(omega1*sin(phi0+(pi*bandwidth*((t-offs_t).^2)/tau_p)-2*pi*offs_f*(t-offs_t)));

beta = complex(Cx,Cy);

end
